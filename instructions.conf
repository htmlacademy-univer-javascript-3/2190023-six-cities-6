Задача
В прошлом задании мы подготовили проект к работе. Пришло время опробовать React в деле. В этом задании мы напишем первые React-компоненты.

1. Создайте и опишите компонент главной страницы (директорию и файл в ней). Название для компонента придумайте самостоятельно. Для модулей с компонентами используйте расширение .tsx. Пока это будет один большой компонент. Не пугайтесь, дальнейший рефакторинг его преобразит. Разметку вы найдёте в директории /markup. Вёрстка главной страницы представлена в файле main.html.

2. Создайте и опишите компонент для отображения одной карточки предложения в списке. Перенесите в него соответствующую часть разметки из компонента, созданного в первом шаге.

3. Удалите из компонента главной страницы все статичные карточки предложений. Вместо них подключите компонент карточки предложения и выведите его столько раз, сколько было предусмотрено карточек предложений в изначальной разметке.

4. Создайте компонент App. Этот компонент должен отрисовывать компонент главной страницы.

5. Откройте в директории /src файл index.tsx и отрисуйте с помощью ReactDOM компонент App в элемент #root. Часть кода уже есть в модуле, вам нужно внести в него необходимые изменения.

6. Запустите приложение с помощью команды npm start. Убедитесь, что приложение отображается корректно.

7. Теперь, используя props, добавим динамики в компоненты. Для этого в компоненте главной страницы приложения определите изменяемые данные — это будет количество предложений аренды. Получите их из props и вставьте в JSX компонента.

8. В файле index.tsx опишите данные, которые нужны в компоненте главной страницы приложения. Передайте их в компонент App.

9. В App получите эти данные из props и передайте их в компонент главной страницы приложения.

10. Ещё раз запустите приложение с помощью команды npm start. Убедитесь, что приложение отображается корректно.

11. Аналогичным образом (пункт 1) создайте компоненты для всех страниц приложения. Полный список страниц приложения доступен в техническом задании. Разметка для страниц в директории /markup. Каждая страница приложения — отдельный компонент. Компоненты страниц пока никуда не нужно подключать, передавать в них props тоже не надо. При старте приложения по-прежнему должна отображаться главная страница приложения.

12. Запустите проверку ESLint командой npm run lint. Убедитесь в отсутствии ошибок. Если они есть — исправьте.